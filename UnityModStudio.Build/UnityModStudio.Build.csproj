<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netstandard2.1</TargetFrameworks>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DevelopmentDependency>true</DevelopmentDependency>
  </PropertyGroup>

  <ItemGroup>
    <None Include="build\*" Pack="true" PackagePath="build\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Framework" Version="16.7.0" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="16.7.0" />
    <PackageReference Include="Nullable" Version="1.3.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\UnityModStudio.Common\UnityModStudio.Common.csproj" PrivateAssets="all" />
  </ItemGroup>

  <!-- Emulate IncludeReferencedProjects switch of nuget.exe which is not suppoerted yet in MSBuild. -->
  <!-- See https://stackoverflow.com/a/56990424/280778 -->
  <Target Name="IncludeProjectDependenciesInNuGet" BeforeTargets="_GetBuildOutputFilesWithTfm">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'all'))" />
    </ItemGroup>
  </Target>

  <!-- Exclude build output of netstandard2.1 from package - it is for nullable verification only. -->
  <Target Name="ExcludeVerificationBuildFromNuGet" AfterTargets="_GetTargetFrameworksOutput">
    <ItemGroup>
      <_TargetFrameworks Remove="netstandard2.1" />
    </ItemGroup>
  </Target>

  <!-- Expose the NuGet package to VSIX packaging pipeline -->
  <Target Name="NuGetPackOutputGroup" DependsOnTargets="Pack" Returns="@(NuGetPackOutput)" />

</Project>
