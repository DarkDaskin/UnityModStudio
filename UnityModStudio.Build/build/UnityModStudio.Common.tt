<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".targets" #>
<#@ include file="UnityModStudio.ttinclude"#>
<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <UnityModStudioTasksAssembly>$(MSBuildThisFileDirectory)..\tools\UnityModStudio.Build.dll</UnityModStudioTasksAssembly>
    <GeneralSettingsPath Condition="'$(GeneralSettingsPath)' == ''">$(LOCALAPPDATA)\UnityModStudio\GeneralSettings.json</GeneralSettingsPath>
    <GameRegistryPath Condition="'$(GameRegistryPath)' == ''">$(LOCALAPPDATA)\UnityModStudio\GameRegistry.json</GameRegistryPath>
    <_FullBaseIntermediateOutputPath>$(BaseIntermediateOutputPath)</_FullBaseIntermediateOutputPath>
    <_FullBaseIntermediateOutputPath Condition="!$([System.IO.Path]::IsPathRooted('$(_FullBaseIntermediateOutputPath)'))">$(MSBuildProjectDirectory)\$(_FullBaseIntermediateOutputPath)</_FullBaseIntermediateOutputPath>
    <_GameSpecificPropertiesProjectFilePath>$(_FullBaseIntermediateOutputPath)$(MSBuildProjectName).GameSpecificProperties.targets</_GameSpecificPropertiesProjectFilePath>
  </PropertyGroup>

  <PropertyGroup>
<# foreach (var property in userSpecifiedProperties) { #>
    <_UserSpecified<#= property #> Condition="'$(<#= property #>)' != ''">$(<#= property #>)</_UserSpecified<#= property #>>
<# } #>
  </PropertyGroup>

<# foreach (var task in tasks) { #>
  <UsingTask TaskName="<#= task #>" AssemblyFile="$(UnityModStudioTasksAssembly)" />
<# } #>

  <Target Name="_ErrorOnSanitizedGameVersionClash" AfterTargets="_CollectGameVersions" Condition="('$(GameVersions)' != '' and '$(IsInnerBuild)' != 'true') or '$(IsCrossTargetingBuild)' == 'true'">
    <SanitizeGameVersion Version="%(_AllGameVersionsForAllTargetFrameworks.Identity)">
      <Output TaskParameter="SanitizedVersion" ItemName="_SanitizedGameVersions" />
    </SanitizeGameVersion>
    <Error Text="Sanitized game versions are not unique." Condition="@(_AllGameVersionsForAllTargetFrameworks->Count()) > @(_SanitizedGameVersions->Distinct()->Count())" />
  </Target>

  <Target Name="_CopyOtherGameVersionsCompiledOutput">
    <ItemGroup>
      <_AllModTargetPathsXAllTargetDirs Include="@(_AllModTargetPaths)" OtherTargetDir="%(_AllTargetDirs.Identity)" OtherGameVersion="%(_AllTargetDirs.GameVersion)" />
    </ItemGroup>
    <ResolveTargetPath RelativeToPath="%(_AllModTargetPathsXAllTargetDirs.ModSourcePath)" Input="@(_AllModTargetPathsXAllTargetDirs->'%(OtherTargetDir)')">
      <Output TaskParameter="Output" ItemName="_ResolvedModOtherVersionPaths" />
    </ResolveTargetPath>
    <ItemGroup>
      <_ResolvedModOtherVersionFiles Include="%(_ResolvedModOtherVersionPaths.Identity)**" DestinationFolder="$([MSBuild]::NormalizePath('%(_ResolvedModOtherVersionPaths.ModTargetPath)%(_ResolvedModOtherVersionPaths.TargetPath)'))"
                                     GameVersion="%(_ResolvedModOtherVersionPaths.GameVersion)" OtherGameVersion="%(_ResolvedModOtherVersionPaths.OtherGameVersion)" />
      <_ModFilesWithTargetPaths Include="@(_ResolvedModOtherVersionFiles->'%(DestinationFolder)%(Filename)%(Extension)')" RemoveMetadata="DestinationFolder;GameVersion;OtherGameVersion" KeepDuplicates="false" />
    </ItemGroup>
    <PropertyGroup>
      <_HasModFileClash Condition="@(_ResolvedModOtherVersionFiles->Count()) > @(_ModFilesWithTargetPaths->Count())">true</_HasModFileClash>
    </PropertyGroup>
    <Copy SourceFiles="@(_ResolvedModOtherVersionFiles)" DestinationFolder="%(_ResolvedModOtherVersionFiles.DestinationFolder)" 
          Condition="'$(_HasModFileClash)' != 'true' and '%(_ResolvedModOtherVersionFiles.GameVersion)' != '%(_ResolvedModOtherVersionFiles.OtherGameVersion)'" />
  </Target>

  <Target Name="AddGameToRegistry">
    <Error Code="UMS0005" Text="GamePath property is not set." Condition="'$(_UserSpecifiedGamePath)' == ''" />

    <AddGameToRegistry Path="$(_UserSpecifiedGamePath)" DisplayName="$(_UserSpecifiedGameDisplayName)" ModsPath="$(_UserSpecifiedGameModsPath)" Version="$(_UserSpecifiedGameVersion)"
                       ModDeploymentMode="$(_UserSpecifiedModDeploymentMode)" DeploySourceCode="$(_UserSpecifiedDeploySourceCode)" DoorstopMode="$(_UserSpecifiedDoorstopMode)"
                       UseAlternateDoorstopDllName="$(_UserSpecifiedUseAlternateDoorstopDllName)" StorePath="$(GameRegistryPath)" />
  </Target>

  <Target Name="UpdateGameRegistry">
    <UpdateGameRegistry Id="$(_UserSpecifiedGameInstanceId)" DisplayName="$(_UserSpecifiedGameDisplayName)" GameName="$(_UserSpecifiedGameName)" Version="$(_UserSpecifiedGameVersion)"
                        Path="$(_UserSpecifiedGamePath)" ModsPath="$(_UserSpecifiedGameModsPath)" ModDeploymentMode="$(_UserSpecifiedModDeploymentMode)" DeploySourceCode="$(_UserSpecifiedDeploySourceCode)"
                        DoorstopMode="$(_UserSpecifiedDoorstopMode)" UseAlternateDoorstopDllName="$(_UserSpecifiedUseAlternateDoorstopDllName)" StorePath="$(GameRegistryPath)" />
  </Target>

  <Target Name="RemoveGameFromRegistry">
    <RemoveGameFromRegistry Id="$(_UserSpecifiedGameInstanceId)" DisplayName="$(_UserSpecifiedGameDisplayName)" GameName="$(_UserSpecifiedGameName)" Version="$(_UserSpecifiedGameVersion)"
                            StorePath="$(GameRegistryPath)"/>
  </Target>

</Project>